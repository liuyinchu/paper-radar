name: Daily arXiv Digest

on:
  schedule:
    - cron: '30 18 * * *'  # 每天 UTC 18:30（北京时间约 02:30）
  workflow_dispatch: {}     # 允许手动触发

permissions:
  contents: write

jobs:
  build-run:
    runs-on: ubuntu-latest

    # 这里只放静态 env。动态的日期/文件名用步骤写入 $GITHUB_ENV。
    env:
      THEME_FILE: src/paperscout/themes.yaml
      RESULTS_JSON: results.json
      IDS_TXT: ids.txt
      TOTAL_IDS: data/total_ids.txt
      NEW_IDS: data/new_ids.txt
      NEW_RESULTS: data/new_results.json
      PROMPT_FILE: prompts/deepseek_system.txt

    steps:
      - name: Check out repository (full history for push/rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Compute dates (UTC) and export env
        run: |
          DATE_UTC_DDMMYY="$(date -u +'%d_%m_%y')"
          DATE_UTC_ISO="$(date -u +'%Y-%m-%d')"
          echo "DATE_UTC_DDMMYY=$DATE_UTC_DDMMYY" >> "$GITHUB_ENV"
          echo "DATE_UTC_ISO=$DATE_UTC_ISO" >> "$GITHUB_ENV"
          echo "OUT_FILE=out/${DATE_UTC_DDMMYY}_Daily_Arxiv.json" >> "$GITHUB_ENV"
          echo "Computed OUT_FILE=$OUT_FILE"

      - name: Ensure directories
        run: |
          mkdir -p data out

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          uv --version

      - name: Ensure jq (for JSON length in summary)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install dependencies (uv sync)
        run: |
          uv sync

      - name: Activate venv (optional; uv run 也可直接用)
        run: |
          source .venv/bin/activate
          python -V
          pip -V

      # ----------------- Step 1 -----------------
      - name: Step 1 - Fetch latest papers (start from today, keep 100)
        run: |
          uv run paperscout \
            --themes "$THEME_FILE" \
            --out-json "$RESULTS_JSON" \
            --out-ids "$IDS_TXT" \
            --n 100 --pool 180 --force

          test -s "$RESULTS_JSON" || { echo "results.json missing!"; exit 1; }
          test -s "$IDS_TXT"      || { echo "ids.txt missing!"; exit 1; }

      # ----------------- Step 2 -----------------
      - name: Step 2 - Dedupe against historical total
        run: |
          uv run paperscout-dedupe \
            --current-ids "$IDS_TXT" \
            --total-ids "$TOTAL_IDS" \
            --out-new-ids "$NEW_IDS" \
            --filter-json "$NEW_RESULTS"

          NEW_COUNT=$(grep -vE '^\s*$|^\s*#' "$NEW_IDS" | wc -l || true)
          echo "NEW_COUNT=$NEW_COUNT" >> $GITHUB_ENV
          echo "Pure-new IDs: $NEW_COUNT"

      # ----------------- Step 3 -----------------
      - name: Prepare daily output (remove existing if any)
        run: |
          if [ -f "$OUT_FILE" ]; then
            rm -f "$OUT_FILE"
            echo "Removed existing $OUT_FILE"
          fi

      - name: Step 3 - Summarize pure-new papers with LLM
        run: |
          # 映射 GitHub Secrets → 程序读取的环境变量名
          export DEEPSEEK_API_KEY="${OPENAI_API_KEY:-}"
          export OPENAI_BASE_URL="${OPENAI_BASE_URL:-}"

          if [ ! -s "$NEW_IDS" ]; then
            echo "[]">"$OUT_FILE"
            echo "No new IDs today; wrote empty $OUT_FILE"
          else
            uv run paperscout-summarize \
              --new-ids "$NEW_IDS" \
              --results "$NEW_RESULTS" \
              --prompt-file "$PROMPT_FILE" \
              --out "$OUT_FILE"
          fi

          test -s "$OUT_FILE" || { echo "Daily output missing!"; exit 1; }
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}

      # ----------------- Summary -----------------
      - name: Job summary
        run: |
          COUNT_OUT=$(jq 'length' "$OUT_FILE" 2>/dev/null || echo 0)
          {
            echo "## Daily arXiv Digest ($DATE_UTC_ISO)"
            echo ""
            echo "- New IDs (deduped): ${NEW_COUNT:-0}"
            echo "- Summarized items written to: \`$OUT_FILE\`"
            echo "- JSON count: $COUNT_OUT"
          } >> "$GITHUB_STEP_SUMMARY"

      # ----------------- Commit & Push with retries -----------------
      - name: Commit and push changes (robust with retries)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 生成日报成功后再更新总表并提交
          uv run paperscout-dedupe \
            --current-ids "$IDS_TXT" \
            --total-ids "$TOTAL_IDS" \
            --out-new-ids "$NEW_IDS" \
            --update-total

          git add "$OUT_FILE" "$TOTAL_IDS"

          if git diff --cached --quiet; then
            echo "Nothing to commit."
            exit 0
          fi

          COUNT_OUT=$(jq 'length' "$OUT_FILE" 2>/dev/null || echo 0)
          git commit -m "chore(daily): ${DATE_UTC_DDMMYY} arXiv digest (items=${COUNT_OUT}, new=${NEW_COUNT:-0})"

          n=0
          until [ $n -ge 3 ]
          do
            if git push origin HEAD:main; then
              echo "Push succeeded."
              exit 0
            else
              echo "Push failed. Attempt $((n+1))/3; rebasing…"
              git pull --rebase origin main || true
              n=$((n+1))
            fi
          done

          echo "Push still failing after 3 attempts. Failing the job."
          exit 1